package com.arnold.server.model;

import com.arnold.server.model.base.BaseArnold;
import com.arnold.server.util.ArnoldUtils;
import com.jfinal.plugin.activerecord.Db;
import com.jfinal.plugin.activerecord.Page;
import com.jfinal.plugin.activerecord.Record;
import com.pallas.utils.Utils;

import java.util.List;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class Arnold2 extends BaseArnold<Arnold2> {
	public static final Arnold2 dao = new Arnold2();

	/**
	 * 
	 * @Description: 查询村名
	 * @author Li Bangming;
	 * @date 2017年8月15日 上午11:50:12
	 * @return
	 */
	public static Record queryEmploymentValliagerByValliagerId(String valliagerId) {

		// String sql = "select rs.* from (select tv.*,tp.typeId,tp.name as
		// postName,tp.orgId,tvph.postId,tvph.memberId
		// ,tvph.ralationTypeId,tvph.salary,tvph.postLeaveDate as mountGuardDate from
		// tb_villager tv "
		// + " LEFT JOIN (select * from tb_villager_post_happen tvph where
		// tvph.createTime=(select MAX(createTime) from tb_villager_post_happen )) tvph
		// "
		// + " on tv.id=tvph.villagerId "
		// + " LEFT JOIN (select * from tb_post ) tp "
		// + " on tp.id=tvph.postId "
		// + " ) as rs where rs.id =?";

		String sql = "SELECT  tv.*,tp.typeId,tp.name as postName,tp.orgId,tvph.postId,tvph.memberId ,tvph.ralationType,tvph.salary,"
				+ "tvph.postLeaveDate ,tvph.reason,tvph.jobCategory,tvph.companyProject, tvph.averageIncome,tvph.department,tvph.isFiveFund,"
				+ "tvph.isEatEncase,tvph.isEat,tvph.isEncase,tvph.isLunch,tvph.isOther,fam.townId,fam.hamletId,fam.groupName,"
				+ "tvph.editUserId,tvph.editDate,tvph.createUserId,tvph.id as tvId,tvph.jobAddress,year(ifnull(tv.birthday,now())) -year(now()) as age "
				+ "FROM tb_villager tv "
				+ "LEFT JOIN (select * from tb_villager_post_happen tvph where tvph.createTime=(select MAX(createTime) "
				+ "from tb_villager_post_happen cc where cc.villagerId =  tvph.villagerId)) tvph on tv.id=tvph.villagerId  "
				+ "LEFT JOIN tb_post tp ON tp.id = tvph.postId " + "LEFT JOIN tb_family fam ON fam.id = tv.familyId "
				+ "where tv.id=?";

		return Db.findFirst(sql, valliagerId);

	}

	public static Record queryVillagerPostHappenByVillagerId(String valigerId) {
		String sql = "SELECT * FROM tb_villager_post_happen WHERE villagerId = ? ORDER BY createTime DESC";
		return Db.findFirst(sql, valigerId);
	}

	/**
	 * 
	 * @Description: 查询村名
	 * @author Li Bangming;
	 * @date 2017年8月15日 上午11:50:12
	 * @param pageNumber
	 * @param pageSize
	 * @param typeId
	 * @param postId
	 * @param isWorking
	 * @param keyWord
	 * @return
	 */
	public Page<Record> pageEmploymentValliager(int pageNumber, int pageSize, String typeId, String postId,
			int isWorking, String keyWord) {
		String sql = "select rs.* ";

		String sqlExceptSelect = " from (select tv.*,tp.typeId,tp.name as postName,tp.orgId,tvph.postId,tvph.memberId ,tvph.ralationType,tvph.salary,tvph.postLeaveDate as mountGuardDate"
				+ ",tvph.jobCategory,tvph.companyProject,tvph.averageIncome,tvph.isFiveFund "
				+ ",tvph.isEatEncase ,tvph.isEat ,tvph.isEncase ,tvph.isOther  from tb_villager tv "
				+ " LEFT JOIN (select * from tb_villager_post_happen tvph where tvph.createTime=(select MAX(createTime) from tb_villager_post_happen )) tvph "
				+ "  on tv.id=tvph.villagerId " + " LEFT JOIN (select * from tb_post ) tp "
				+ " on tp.id=tvph.postId where tv.isWorking=?" + " ) as rs where rs.typeId like '%" + typeId
				+ "%' and rs.postId like '%" + postId + "%'";

		return Db.paginate(pageNumber, pageSize, sql, sqlExceptSelect, isWorking);

	}

	/**
	 * 
	 * @Description: 查询失业
	 * @author Li Bangming;
	 * @date 2017年8月15日 上午11:50:12
	 * @param pageNumber
	 * @param pageSize
	 * @param typeId
	 * @param postId
	 * @param isWorking
	 * @param keyWord
	 * @return
	 */
	public Page<Record> pageUnEmploymentValliager(int pageNumber, int pageSize, String typeId, String postId,
			int isWorking, String keyWord) {
		String sql = "select rs.* ";

		String sqlExceptSelect = "from (SELECT  tv.*,tp.typeId,tp.name as postName,tp.orgId,tvph.id as happenId,tvph.postId,tvph.memberId ,tvph.ralationType,tvph.salary,"
				+ "tvph.postLeaveDate ,tvph.reason,tvph.jobCategory,tvph.companyProject, tvph.averageIncome,tvph.department,tvph.isFiveFund,"
				+ "tvph.isEatEncase,tvph.isEat,tvph.isEncase,tvph.isLunch,tvph.isOther,"
				// + "fam.townId,fam.hamletId,fam.groupName,"
				+ "(SELECT CONCAT(IF(tr.regionType = 0,'',(SELECT btr.parentName FROM tb_region btr WHERE btr.id = tr.parentId)), "
				+ "tr.parentName,tr.shortName) " + "FROM tb_region tr WHERE tr.id = fam.regionId) AS fAdress, "
				+ "tvph.editUserId,tvph.editDate,tvph.createUserId,year(ifnull(tv.birthday,now())) -year(now()) as age  "
				+ "FROM tb_villager tv "
				+ "INNER JOIN (select * from tb_villager_post_happen tvph where tvph.createTime=(select MAX(createTime) "
				+ "from tb_villager_post_happen cc where cc.villagerId =  tvph.villagerId)) tvph on tv.id=tvph.villagerId  "
				+ "LEFT JOIN tb_post tp ON tp.id = tvph.postId " + "LEFT JOIN tb_family fam ON fam.id = tv.familyId "
				+ "where tv.isWorking=?";

		if (isWorking == 1) {
			sqlExceptSelect = " from (SELECT  tv.*,tvph.postLeaveDate ,tvph.reason,(SELECT CONCAT(IF(tr.regionType = 0,'',(SELECT btr.parentName FROM tb_region btr WHERE btr.id = tr.parentId)),tr.parentName,tr.shortName) FROM tb_region tr WHERE tr.id = fam.regionId) AS fAdress,year(ifnull(tv.birthday,now())) -year(now()) as age "
					+ " FROM tb_villager tv INNER JOIN tb_family fam ON fam.id = tv.familyId left join (select * from tb_villager_post_happen tvph where tvph.createTime=(select MAX(createTime) from tb_villager_post_happen cc where cc.villagerId =  tvph.villagerId)) tvph on tv.id=tvph.villagerId "
					+ " WHERE tv.isWishEmployment=0 and tv.isWorking=? ";
		}
		if (isWorking != 1) {
			if (typeId != null && typeId.trim().length() > 0) {
				sqlExceptSelect += " and tvph.jobCategory = '" + typeId + "'";
			}
			if (postId != null && postId.trim().length() > 0) {
				sqlExceptSelect += " and tvph.postId = '" + postId + "'";
			}
		}
		if (keyWord != null && keyWord.trim().length() > 0) {
			sqlExceptSelect += " and (tv.IDnumber like '%" + keyWord + "%' or tv.name like '%" + keyWord
					+ "%' or fam.phone like '%" + keyWord + "%')";
		}
		sqlExceptSelect += ")AS rs";
		return Db.paginate(pageNumber, pageSize, sql, sqlExceptSelect, isWorking);

	}

	/**
	 * @Description: 根据id查询
	 * @author Li Bangming;
	 * @date 2017年8月15日 下午3:39:50
	 * @param pageNumber
	 * @param pageSize
	 * @param ids
	 * @return
	 */
	public Record queryPublicProjectById(String id) {

		String sql = "SELECT t2.*, t3.cotentAndArea,t3.completeMoney,t3.fundation,t3.selfMoney,t3.departmentMoney"
				+ " FROM(SELECT * FROM tb_project t1) t2 "
				+ "LEFT JOIN tb_public_service t3 ON t2.id = t3.id and t2.id=?";

		return Db.findFirst(sql, id);

	}

	/**
	 * @Description: 查询详情
	 * @author Li Bangming;
	 * @date 2017年8月16日 上午11:43:53
	 * @param id
	 * @return
	 */
	public Record queryPostById(String id) {

		String sql = "SELECT * FROM tb_post t1 where t1.id=?";

		return Db.findFirst(sql, id);

	}

	/**
	 * @Description: 查询详情
	 * @author Li Bangming;
	 * @date 2017年8月16日 上午11:43:53
	 * @param id
	 * @return
	 */
	public Record queryEnterpriseById(String id) {

		String sql = "SELECT * FROM tb_enterprise t1 where t1.id=?";

		return Db.findFirst(sql, id);

	}

	public List<Record> getRecordBySql(String sql) {
		return Db.find(sql);
	}

	public Page<Record> pageEffectTPGJJson(int pageNumber, int pageSize) {
		String sql = "SELECT region2.fullName as hamletId, lastYear, sum(family_count) AS family_count, sum(family_total) "
				+ "AS family_total, sum(family_villager_count) AS family_villager_count, sum(family_villager_total) AS family_villager_total ";

		String sqlExceptSelect = " FROM (  " + 
				"	SELECT regionId, lastYear, 0 AS family_count, sum(family_total) as family_total, 0 AS family_villager_count, sum(family_villager_total) as family_villager_total   " + 
				"	FROM ( " + 
				"		select family1.regionId,year(ifnull(lastModifyTime,now())) as lastYear,family1.ralationTypeId as lastRalationTypeId,family1.id,1 as family_total,0 as family_villager_total  " + 
				"		from arnold.tb_family as family1  " + 
				"		where isValid=0  " + 
				"		union ALL   " + 
				"		select family1.regionId,year(ifnull(lastModifyTime,now())) as lastYear,family1.ralationTypeId as lastRalationTypeId,family1.id,0 as family_total,1 as family_villager_total  " + 
				"		from arnold.tb_family as family1 left join arnold.tb_villager as temp_family1 on family1.id=temp_family1.familyId  " + 
				"		where family1.isValid=0  " + 
				"		) as family2  " + 
				"		group by lastYear,regionId  " + 
				"	UNION ALL  " + 
				"	SELECT regionId, lastYear, count(1) AS family_count, 0 AS family_total, 0 AS family_villager_count, 0 AS family_villager_total  " + 
				"	FROM (  " + 
				"		SELECT family3.regionId, YEAR ( ifnull( family3.lastModifyTime, now())) AS lastYear, ifnull(family3.ralationTypeId, '0') AS lastRelationTypeId, family3.id  " + 
				"		FROM  arnold.tb_family AS family3  " + 
				"		WHERE family3.isValid = 0 and (family3.ralationTypeId='e87df7f3-f7ad-4fea-982c-127c6e24fba6' or family3.ralationTypeId='dea6cc62-d4f5-47f9-9943-972900e2fc9b') " + 
				"	) AS family4  " + 
				"	GROUP BY lastYear, regionId  " + 
				"	UNION ALL  " + 
				"	SELECT regionId, lastYear, 0 AS family_count, 0 AS family_total, count(1) AS family_villager_count, 0 AS family_villager_total  " + 
				"	FROM (  " + 
				"		SELECT family5.regionId, YEAR ( ifnull( family5.lastModifyTime, now())) AS lastYear, ifnull(family5.ralationTypeId, '0') AS lastRelationTypeId, family5.id  " + 
				"		FROM arnold.tb_family AS family5  " + 
				"		WHERE family5.isValid = 0 and (family5.ralationTypeId='e87df7f3-f7ad-4fea-982c-127c6e24fba6' or family5.ralationTypeId='dea6cc62-d4f5-47f9-9943-972900e2fc9b') " + 
				"	) AS family6 LEFT JOIN arnold.tb_villager AS villager1 ON family6.id = villager1.familyId  " + 
				"	GROUP BY lastYear, regionId  " + 
				") AS total_all inner join tb_region as region1 on region1.id=regionId inner join tb_region as region2 on region1.parentId=region2.id " + 
				"where region2.regionType=5  " + 
				"GROUP BY lastYear, region2.id   " + 
				"ORDER BY lastYear DESC";

		return Db.paginate(pageNumber, pageSize, sql, sqlExceptSelect);
	}

	public Page<Record> pageEffectJCSSJson(int pageNumber, int pageSize) {
		String sql = "SELECT start_year, end_year, project_type, project_count, project_total, start_project_count, plan_total, "
				+ "end_project_count, new_start_project_count, current_project_count, current_project_total, project_all_total, "
				+ "( CASE WHEN project_all_total <= 0 THEN 0.00 WHEN project_total <= 0 THEN 100.00 ELSE ( project_all_total / project_total ) * 100.0 END ) "
				+ "AS project_percent  ";

		String sqlExceptSelect = "FROM ( SELECT start_year, end_year, project_type, count(1) AS project_count, sum(project_total) AS project_total, "
				+ "sum(start_project_count) AS start_project_count, sum(plan_total) AS plan_total, sum(end_project_count) AS end_project_count, "
				+ "sum(start_project_count) AS new_start_project_count, sum(current_project_count) AS current_project_count, "
				+ "ifnull(( SELECT sum( ifnull( project_happen1.investPrice, 0 )) FROM arnold.tb_project_invest_happen AS "
				+ "project_happen1 WHERE project_happen1.projectId = project_total.projectId AND YEAR (project_happen1.investDate) = YEAR (now())), 0 ) "
				+ "AS current_project_total, ifnull(( SELECT sum( ifnull( project_happen1.investPrice, 0 )) FROM arnold.tb_project_invest_happen AS "
				+ "project_happen1 WHERE project_happen1.projectId = project_total.projectId ), 0 ) AS project_all_total FROM "
				+ "( SELECT type AS project_type, project1.id AS projectId, finalMoney AS project_total, YEAR (project1.startTime) AS start_year, "
				+ "finalMoney AS plan_total, YEAR (project1.endTime) AS end_year, ( CASE WHEN YEAR (project1.startTime) = YEAR (now()) THEN 1 ELSE 0 END ) "
				+ "AS start_project_count, /***开始的项目***/ ( CASE WHEN YEAR (project1.endTime) = YEAR (now()) THEN 1 ELSE 0 END ) "
				+ "AS end_project_count, /****结束的项目****/ ( CASE WHEN project1.realStartTime < now() AND project1.realEndTime > now() THEN 1 ELSE 0 END ) "
				+ "AS current_project_count /*****正在进行的项目*****/ FROM arnold.tb_project AS project1 ) AS project_total GROUP BY start_year, end_year, "
				+ "project_type ) AS project_total1";

		return Db.paginate(pageNumber, 20, sql, sqlExceptSelect);
	}

	public List<Record> pageEffectJYWGJson() {
		String sql = "SELECT region1.fullName as hamletId, postId, jobCategory, lastyear, sum(work_total_count) AS work_total_count, sum(work_current_count) "
				+ "AS work_current_count, sum(no_work_total_count) AS no_work_total_count ";

		String sqlExceptSelect = "FROM ( SELECT hamletId, jobCategory, lastyear, count(0) AS work_total_count, 0 AS work_current_count, postId, 0 AS "
				+ "no_work_total_count FROM ( SELECT family1.hamletId, villager_happen1.jobCategory, YEAR ( ifnull( villager_happen1.postLeaveDate, now())) "
				+ "AS lastyear, villager_happen1.villagerId, villager_happen1.postId FROM arnold.tb_family AS family1 INNER JOIN arnold.tb_villager "
				+ "AS villager1 ON family1.id = villager1.familyid INNER JOIN arnold.tb_villager_post_happen AS villager_happen1 ON "
				+ "villager1.id = villager_happen1.villagerId WHERE villager_happen1.ralationType = 3 ) AS work1 GROUP BY hamletId, postId, lastyear "
				+ "UNION ALL /***当期就业人数***/ SELECT hamletId, jobCategory, lastyear, 0 AS work_total_count, count(1) AS work_current_count, postId, 0 "
				+ "AS no_work_total_count FROM ( SELECT family1.hamletId, villager_happen1.jobCategory, YEAR ( ifnull( villager_happen1.postLeaveDate, now())) "
				+ "AS lastyear, villager_happen1.villagerId, villager_happen1.postId FROM arnold.tb_family AS family1 INNER JOIN arnold.tb_villager AS "
				+ "villager1 ON family1.id = villager1.familyid INNER JOIN arnold.tb_villager_post_happen AS villager_happen1 ON "
				+ "villager1.id = villager_happen1.villagerId WHERE villager_happen1.ralationType = 3 AND YEAR "
				+ "( villager_happen1.postLeaveDate ) = YEAR (now())) AS work1 GROUP BY hamletId, postId, lastyear UNION ALL /***失业总人数***/ "
				+ "SELECT hamletId, jobCategory, lastyear, 0 AS work_total_count, 0 AS work_current_count, postId, count(1) AS no_work_total_count FROM "
				+ "( SELECT family1.hamletId, villager_happen1.jobCategory, YEAR ( ifnull( villager_happen1.postLeaveDate, now())) AS "
				+ "lastyear, villager_happen1.villagerId, villager_happen1.postId FROM arnold.tb_family AS family1 INNER JOIN arnold.tb_villager "
				+ "AS villager1 ON family1.id = villager1.familyid INNER JOIN arnold.tb_villager_post_happen AS villager_happen1 ON "
				+ "villager1.id = villager_happen1.villagerId WHERE ( villager_happen1.ralationType = 4 OR villager_happen1.ralationType = 5 )) "
				+ "AS work1 GROUP BY hamletId, postId, lastyear ) AS work2 inner join tb_region as region1 on region1.id=hamletId GROUP BY hamletId, jobCategory, postId, lastyear";

		return Db.find(sql, sqlExceptSelect);
	}

	public Page<Record> pageEffectXZYZJson(int pageNumber, int pageSize) {
		String queryStr1 = "select region1.fullName as regionName,ifnull(work_year,year(now())) as work_year,sum(ifnull(total_underwriting_amount,0)) as total_underwriting_amount,"
				+ " sum(ifnull((fat_pig_amount1 +piglet_amount1),0)) as total_amount1,sum(ifnull(fat_pig_amount1,0)) as fat_pig_amount1,sum(ifnull(piglet_amount1,0)) as piglet_amount1"
				+ " ,sum(ifnull(sow_amount,0)) as sow_amount, "
				+ " sum(ifnull(fat_pig_amount2+piglet_amount2,0)) as total_amount2,sum(ifnull(fat_pig_amount2,0)) as fat_pig_amount2,sum(ifnull(piglet_amount2,0)) as piglet_amount2,"
				+ " (ifnull(sum(total_underwriting_money),0))/10000 as total_underwriting_money,"
				+ " sum(ifnull(fat_pig_amount3+piglet_amount3,0)) as total_amount3,sum(ifnull(fat_pig_amount3,0)) as fat_pig_amount3,sum(ifnull(piglet_amount3,0)) as piglet_amount3 ";

		String sqlExceptSelect1 = " from( select hamletId,work_year,sum(family_amount) as total_underwriting_amount,sum(total_underwriting_money) as total_underwriting_money, "
				+ " 0 as fat_pig_amount1,0  as piglet_amount1,0 as sow_amount,0 as fat_pig_amount2,0 as piglet_amount2,0 as fat_pig_amount3, "
				+ " 0 as piglet_amount3 " + " from( "
				+ " SELECT family1.hamletId,family_happen1.amount as family_amount,family_happen1.amount*family_happen1.price as total_underwriting_money "
				+ " ,year(ifnull(family_happen1.tradeTime,family_happen1.createTime)) as work_year "
				+ " FROM arnold.tb_family as family1 inner join arnold.tb_family_economic_underwriting_happen as family_happen1 on family1.id=family_happen1.familyid "
				+ " where (family_happen1.typeId ='4f7987f5-5d50-45e1-9044-0ce8f2336b40' or family_happen1.typeId ='6401d303-68d8-4036-ab05-44bd3bfc1aad' "
				+ " or family_happen1.typeId ='529c33ce-3220-4814-b1f7-e4c96e05fd37' or family_happen1.typeId ='60e763c2-5c6e-4759-bc05-d437e24c6a08') "
				+ " ) as work1 " + " group by hamletId,work_year " + " union all "
				+ " select hamletId,work_year,0 as total_underwriting_amount,0 as total_underwriting_money, "
				+ " sum(family_amount) as fat_pig_amount1,0 as piglet_amount1,0 as sow_amount,0 as fat_pig_amount2,0 as piglet_amount2,0 as fat_pig_amount3, "
				+ " 0 as piglet_amount3 " + " from( "
				+ " SELECT family1.hamletId,family_happen1.amount as family_amount,year(ifnull(family_happen1.operatorTime,now())) as work_year "
				+ " FROM arnold.tb_family as family1 inner join arnold.tb_family_economic_herds as family_happen1 on family1.id=family_happen1.familyid "
				+ " where (family_happen1.typeId ='4f7987f5-5d50-45e1-9044-0ce8f2336b40' or family_happen1.typeId ='6401d303-68d8-4036-ab05-44bd3bfc1aad') "
				+ " ) as work1 " + " group by hamletId,work_year " + " union all "
				+ " select hamletId,work_year,0 as total_underwriting_amount,0 as total_underwriting_money, "
				+ " 0 as fat_pig_amount1,sum(family_amount) as piglet_amount1,0 as sow_amount,0 as fat_pig_amount2,0 as piglet_amount2,0 as fat_pig_amount3, "
				+ " 0 as piglet_amount3 " + " from( "
				+ " SELECT family1.hamletId,family_happen1.amount as family_amount,year(ifnull(family_happen1.operatorTime,now())) as work_year "
				+ " FROM arnold.tb_family as family1 inner join arnold.tb_family_economic_herds as family_happen1 on family1.id=family_happen1.familyid "
				+ " where (family_happen1.typeId ='60e763c2-5c6e-4759-bc05-d437e24c6a08' or family_happen1.typeId ='529c33ce-3220-4814-b1f7-e4c96e05fd37') "
				+ " ) as work1 " + " group by hamletId,work_year " + " union all "
				+ " select hamletId,work_year,0 as total_underwriting_amount,0 as total_underwriting_money, "
				+ " 0 as fat_pig_amount1,0 as piglet_amount1, sum(family_amount) as sow_amount,0 as fat_pig_amount2,0 as piglet_amount2,0 as fat_pig_amount3, "
				+ " 0 as piglet_amount3 " + " from( "
				+ " SELECT family1.hamletId,family_happen1.amount as family_amount,year(ifnull(family_happen1.operatorTime,now())) as work_year "
				+ " FROM arnold.tb_family as family1 inner join arnold.tb_family_economic_herds as family_happen1 on family1.id=family_happen1.familyid "
				+ " where (family_happen1.typeId ='6401d303-68d8-4036-ab05-44bd3bfc1aad') " + " ) as work1 "
				+ " group by hamletId,work_year " + " union all "
				+ " select hamletId,work_year,0 as total_underwriting_amount,0 as total_underwriting_money, "
				+ " 0 as fat_pig_amount1,0 as piglet_amount1, 0 as sow_amount, sum(family_amount) as fat_pig_amount2,0 as piglet_amount2,0 as fat_pig_amount3, "
				+ " 0 as piglet_amount3 " + " from( "
				+ " SELECT family1.hamletId,family_happen1.amount as family_amount,year(ifnull(family_happen1.tradeTime,family_happen1.createTime)) as work_year "
				+ " FROM arnold.tb_family as family1 inner join arnold.tb_family_economic_underwriting_happen as family_happen1 on family1.id=family_happen1.familyid "
				+ " where (family_happen1.typeId ='4f7987f5-5d50-45e1-9044-0ce8f2336b40' or family_happen1.typeId ='6401d303-68d8-4036-ab05-44bd3bfc1aad') "
				+ " and year(ifnull(family_happen1.tradeTime,family_happen1.createTime)) =year(now()) " + " ) as work1 "
				+ " group by hamletId,work_year " + " union all "
				+ " select hamletId,work_year,0 as total_underwriting_amount,0 as total_underwriting_money, "
				+ " 0 as fat_pig_amount1,0 as piglet_amount1, 0 as sow_amount, 0 as fat_pig_amount2,sum(family_amount) as piglet_amount2,0 as fat_pig_amount3, "
				+ " 0 as piglet_amount3 " + " from( "
				+ " SELECT family1.hamletId,family_happen1.amount as family_amount,year(ifnull(family_happen1.tradeTime,family_happen1.createTime)) as work_year "
				+ " FROM arnold.tb_family as family1 inner join arnold.tb_family_economic_underwriting_happen as family_happen1 on family1.id=family_happen1.familyid "
				+ " where (family_happen1.typeId ='60e763c2-5c6e-4759-bc05-d437e24c6a08' or family_happen1.typeId ='529c33ce-3220-4814-b1f7-e4c96e05fd37') "
				+ " and year(ifnull(family_happen1.tradeTime,family_happen1.createTime)) =year(now()) " + " ) as work1 "
				+ " group by hamletId,work_year " + " union all "
				+ " select hamletId,work_year,0 as total_underwriting_amount,0 as total_underwriting_money, "
				+ " 0 as fat_pig_amount1,0 as piglet_amount1, 0 as sow_amount, 0 as fat_pig_amount2,0 as piglet_amount2,sum(family_amount) as fat_pig_amount3, "
				+ " 0 as piglet_amount3 " + " from( "
				+ " SELECT family1.hamletId,family_happen1.amount as family_amount,year(ifnull(family_happen1.tradeTime,family_happen1.createTime)) as work_year "
				+ " FROM arnold.tb_family as family1 inner join arnold.tb_family_economic_underwriting_happen as family_happen1 on family1.id=family_happen1.familyid "
				+ " where (family_happen1.typeId ='4f7987f5-5d50-45e1-9044-0ce8f2336b40' or family_happen1.typeId ='6401d303-68d8-4036-ab05-44bd3bfc1aad') "
				+ " ) as work1 " + " group by hamletId,work_year " + " union all "
				+ " select hamletId,work_year,0 as total_underwriting_amount,0 as total_underwriting_money, "
				+ " 0 as fat_pig_amount1,0 as piglet_amount1, 0 as sow_amount, 0 as fat_pig_amount2,0 as piglet_amount2,0 as fat_pig_amount3, "
				+ " sum(family_amount) as piglet_amount3 " + " from( "
				+ " SELECT family1.hamletId,family_happen1.amount as family_amount,year(ifnull(family_happen1.tradeTime,family_happen1.createTime)) as work_year "
				+ " FROM arnold.tb_family as family1 inner join arnold.tb_family_economic_underwriting_happen as family_happen1 on family1.id=family_happen1.familyid "
				+ " where (family_happen1.typeId ='60e763c2-5c6e-4759-bc05-d437e24c6a08' or family_happen1.typeId ='529c33ce-3220-4814-b1f7-e4c96e05fd37') "
				+ " ) as work1 " + " group by hamletId,work_year "
				+ " ) as total_all right join tb_region as region1 on total_all.hamletId=region1.fullName where region1.regionType=5 group by region1.fullName,work_year ";

		return Db.paginate(pageNumber, 20, queryStr1, sqlExceptSelect1);
	}

	public Page<Record> page_getRegionByPId_json(String parentId, int pageNumber, int pageSize) {
		String sql = "select r.fullName,r.id ";

		String sqlExceptSelect = "FROM tb_region r  where r.parentId=? ";

		return Db.paginate(pageNumber, pageSize, sql, sqlExceptSelect, parentId);
	}

	/**
	 * @Description: 查找家庭的香猪养殖和香猪的购买量
	 * @author Li Bangming;
	 * @date 2017年8月16日 上午11:43:53
	 * @param id
	 * @return
	 */
	public Record queryXzyzByFamliyId(String famliyId) {

		String sql = "select familyId,sum(total_sale_amount) as total_sale_amount,sum(total_purchase_amount) as total_purchase_amount,sum(post_count) as post_count  "
				+ " ,ifnull((select group_concat(temp1.name) from tb_villager as temp1 inner join tb_villager_post_happen as post1 on temp1.id=post1.villagerId  "
				+ " and post1.createTime=(select max(post2.createTime) from arnold.tb_villager_post_happen AS post2 where post2.villagerId=temp1.id)  "
				+ " and post1.ralationType = 3 and post1.jobCategory='b97b3358-dca5-4251-9216-8242de81469f' where temp1.familyId=work1.familyId),'') as family_villager   "
				+ " ,ifnull((select group_concat(post1.postId) from tb_villager as temp1 inner join tb_villager_post_happen as post1 on temp1.id=post1.villagerId  "
				+ " and post1.createTime=(select max(post2.createTime) from arnold.tb_villager_post_happen AS post2 where post2.villagerId=temp1.id)  "
				+ " and post1.ralationType = 3 and post1.jobCategory='b97b3358-dca5-4251-9216-8242de81469f'  "
				+ " where temp1.familyId=work1.familyId),'') as villager_post  "
				+ " ,ifnull((select group_concat(post1.jobAddress) from tb_villager as temp1 inner join tb_villager_post_happen as post1 on temp1.id=post1.villagerId  "
				+ " and post1.createTime=(select max(post2.createTime) from arnold.tb_villager_post_happen AS post2 where post2.villagerId=temp1.id)  "
				+ " and post1.ralationType = 3 and post1.jobCategory='b97b3358-dca5-4251-9216-8242de81469f'  "
				+ " where temp1.familyId=work1.familyId),'') as villager_address from( select familyId,sum(family_amount) as total_sale_amount,0 as total_purchase_amount,0 as post_count  "
				+ " from( SELECT family1.id as familyId,family_happen1.amount as family_amount  "
				+ " FROM arnold.tb_family as family1 inner join arnold.tb_family_economic_underwriting_happen as family_happen1 on family1.id=family_happen1.familyid  "
				+ " where (family_happen1.typeId ='4f7987f5-5d50-45e1-9044-0ce8f2336b40' or family_happen1.typeId ='6401d303-68d8-4036-ab05-44bd3bfc1aad'  "
				+ " or family_happen1.typeId ='529c33ce-3220-4814-b1f7-e4c96e05fd37' or family_happen1.typeId ='60e763c2-5c6e-4759-bc05-d437e24c6a08')  "
				+ " and year(ifnull(family_happen1.tradeTime,now()))=year(now())  " + " ) as work1 group by familyId  "
				+ " union all  "
				+ " select familyId,0 as total_sale_amount,sum(family_amount) as total_purchase_amount,0 as post_count  "
				+ " from(  " + " SELECT family1.id as familyId,family_happen1.amount as family_amount  "
				+ " FROM arnold.tb_family as family1 inner join arnold.tb_family_economic_purchase_happen as family_happen1 on family1.id=family_happen1.familyid  "
				+ " where (family_happen1.typeId ='4f7987f5-5d50-45e1-9044-0ce8f2336b40' or family_happen1.typeId ='6401d303-68d8-4036-ab05-44bd3bfc1aad'  "
				+ " or family_happen1.typeId ='529c33ce-3220-4814-b1f7-e4c96e05fd37' or family_happen1.typeId ='60e763c2-5c6e-4759-bc05-d437e24c6a08')  "
				+ " and year(ifnull(family_happen1.tradeTime,now()))=year(now())  " + " ) as work1 group by familyId  "
				+ " union ALL  " + " select family1.id as familyId,0 as total_sale_amount,0 as total_purchase_amount,  "
				+ " (select count(1) from tb_villager as villager1 inner join tb_villager_post_happen as post1 on  villager1.id=post1.villagerId  "
				+ " where  post1.createTime=(select max(post2.createTime) from arnold.tb_villager_post_happen AS post2 where post2.villagerId=villager1.id)  "
				+ " and post1.ralationType = 3 and post1.jobCategory='b97b3358-dca5-4251-9216-8242de81469f' and villager1.familyId=family1.id) as post_count   "
				+ " from tb_family as family1   " + " ) as work1   where familyid=? " + " group by familyId ";

		return Db.findFirst(sql, famliyId);

	}

}
