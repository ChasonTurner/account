package com.arnold.server.model;

import java.util.List;

import com.arnold.server.model.base.BaseBreedIncome;
import com.jfinal.plugin.activerecord.Db;
import com.jfinal.plugin.activerecord.Record;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class BreedIncome extends BaseBreedIncome<BreedIncome> {
	public static final BreedIncome dao = new BreedIncome();
	
	final static String tableName = " tb_breed_income";
	
	/**
	 * 获取订单养殖收购信息
	 * @param familyId
	 * @param typeId
	 * @return
	 */
	public Record getBreedOrderInfo(String familyId, String typeId) {
		String sql = "SELECT "
		  + " tbi.familyId, "
		  + " SUM(tbi.number) AS numbers, "
		  + " SUM(tbi.alreadyBuy) AS alreadyBuys "
		  + " FROM "
		  + " tb_breed_income tbi "
		  + " WHERE tbi.familyId = ? "
		  + " AND tbi.typeId = ? ";
		return Db.findFirst(sql,familyId,typeId);
	}
	
	/**
	 * 获取年度养殖类型记录
	 * @param familyId
	 * @param searchYear
	 * @return
	 */
	public List<Record> getBreedOrderInfos(String familyId, String searchYear) {
		String sql = "SELECT "
		  + " tbi.familyId, "
		  + " tbi.typeId, "
		  + " SUM(tbi.number) AS number, "
		  + " CONVERT(SUM(tbi.income), DECIMAL) AS  income "
		  + " FROM "
		  + " tb_breed_income tbi " 
		  + " WHERE tbi.familyId = ? AND tbi.createTime LIKE '"+searchYear+"%' "
		  + " GROUP BY tbi.typeId";
		return Db.find(sql, familyId);
	}
	
	/**
	 * 获取家庭养殖收入
	 * @param pFamilyId
	 * @param year
	 * @return
	 */
	public double countBreedIncomeByFamilyId(String pFamilyId, String year) {
		double resCome = 0d;
		String sql = " SELECT  "
				+ "   IFNULL(CONVERT(SUM(tbi.income), DECIMAL), 0) as income "
				+ " FROM "
				+ "   tb_breed_income tbi  "
				+ " WHERE tbi.familyId = '"+pFamilyId+"'  "
				+ "   AND tbi.createTime LIKE '"+year+"%'";
		Record info = Db.findFirst(sql);
		if(null!=info && null!=info.getBigDecimal("income")){
			resCome = info.getBigDecimal("income").doubleValue();
		}
		return resCome;
	}
}

