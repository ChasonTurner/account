package com.arnold.server.model;

import com.arnold.server.model.base.BaseTrain;
import com.arnold.server.model.base.BaseTrainSpeaker;
import com.jfinal.plugin.activerecord.Db;
import com.jfinal.plugin.activerecord.Page;
import com.jfinal.plugin.activerecord.Record;
import com.pallas.utils.Utils;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class TrainHasJob extends BaseTrainSpeaker<TrainHasJob> {
	public static final TrainHasJob dao = new TrainHasJob();
	
	public Page<TrainHasJob> pageTrainHasJob(int pageNumber, int pageSize, String ids){
		
		String sql = "SELECT *";
		
		String sqlExceptSelect = " FROM tb_train_has_job t1 WHERE 1=1 ";
		
		if(!Utils.isBlankOrEmpty(ids)){
			sqlExceptSelect += " AND t1.id IN (";
			String[] idArr = ids.split(",");
			for(String id : idArr){
				sqlExceptSelect += "'" + id + "',";
			}
			sqlExceptSelect = sqlExceptSelect.substring(0,sqlExceptSelect.length()-1)+")";
		}
		
		return dao.paginate(pageNumber, pageSize, sql, sqlExceptSelect);
				
	}
	
	public Page<TrainHasJob> pageTrainHasJobByTrainid(int pageNumber, int pageSize, String trainid) {
		String sql = "SELECT * ";
		
		String sqlExceptSelect = " FROM tb_train_has_job t1 ";
		
		if(!Utils.isBlankOrEmpty(trainid)){
			sqlExceptSelect += " WHERE t1.trainid = '" + trainid + "'";
		}
		
		return dao.paginate(pageNumber, pageSize, sql, sqlExceptSelect);
	}
	
	
	
	public Page<Record> pageTrainHasJobByTrainDateAndPostId(int pageNumber,int pageSize,String startDate,String postId)
	{

		String sql = "SELECT villager_name,sexId,age,raceId,phone,IDnumber,ralationTypeId,address,memberId,jobCategory,postId,companyProject,department,averageIncome,benefit_info,postLeaveDate ";
		
		String sqlExceptSelect = " from( " + 
				" SELECT year(now()) -year(CAST(SUBSTRING(IDnumber,7,8) AS DATETIME)) AS age,villager1.name as villager_name,villager1.sexId,villager1.raceId,villager1.phone,IDnumber,family1.ralationTypeId," + 
				" CONCAT((select fullname from tb_region as r0 where r0.id=((select parentId from tb_region as r1 where r1.id=family1.regionId))),' ', (select fullname from tb_region as r2 where r2.id=family1.regionId)) as address, " + 
				" villager_happen1.memberId,villager_happen1.jobCategory,villager_happen1.postId, " + 
				" villager_happen1.companyProject,villager_happen1.department,villager_happen1.averageIncome, " + 
				" CONCAT((case when (case when villager_happen1.isEat=1 then '包吃' else '' end )='' then '' else '包吃,' end), " + 
				" (case when (case when villager_happen1.isEatEncase=1 then '包吃包住' else '' end )='' then '' else '包吃包住,' end), " + 
				" (case when (case when villager_happen1.isFiveFund=1 then '五险一金' else '' end )='' then '' else '五险一金,' end), " + 
				" (case when (case when villager_happen1.isEncase=1 then '包住' else '' end )='' then '' else '包住,' end), " + 
				" (case when (case when villager_happen1.isLunch=1 then '午餐' else '' end )='' then '' else '午餐,' end), " + 
				" (case when (case when villager_happen1.isOther=1 then '其他' else '' end )='' then '' else '其他' end)) as benefit_info,villager_happen1.postLeaveDate " + 
				" FROM arnold.tb_family as family1 inner join  " + 
				" arnold.tb_villager as villager1 on family1.id=villager1.familyId " + 
				" inner join arnold.tb_villager_post_happen as villager_happen1 on villager1.id=villager_happen1.villagerId " + 
				" where villager_happen1.ralationType=3 and villager_happen1.createTime=(select MAX(createTime) from arnold.tb_villager_post_happen as post1 where post1.villagerId=villager1.id) " + 
				" and villager_happen1.postLeaveDate >=? and villager_happen1.postId=? ) as work ";
		
		return Db.paginate(pageNumber, pageSize, sql, sqlExceptSelect,startDate,postId);
		
	}
	
	
	

}
